{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","sortedBy","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAAOC,EAAUJ,GACzC,IAAIK,EAAa,YAAOF,GAqBxB,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,IACFK,EAAgBA,EAAcM,WAGzBN,EAOcO,CAAiBnB,EAAiBK,EAAQE,GAE/D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPf,IAAWJ,GAAoB,YAEjCqB,QAAS,kBAAMhB,EAAUL,IAL3B,iCASA,wBACEoB,KAAK,SACLD,UAAS,4BACPf,IAAWH,GAAkB,YAE/BoB,QAAS,kBAAMhB,EAAUJ,IAL3B,4BAUA,wBACEmB,KAAK,SACLD,UAAS,6BAAwBb,GAAc,YAC/Ce,QAAS,kBAAMd,GAAc,SAAAe,GAAS,OAAKA,MAH7C,sBAQElB,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPhB,EAAU,IACVE,GAAc,IALlB,sBAaJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bea88941.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortedBy, isReversed) {\n  let preparedGoods = [...goods];\n\n  if (sortedBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortedBy) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortBy !== SORT_BY_ALPHABET && 'is-light'\n          }`}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            sortBy !== SORT_BY_LENGTH && 'is-light'\n          }`}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed(prevState => !prevState)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}